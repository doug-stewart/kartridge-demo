.ap {
  &-content {
    display: flex;
    flex: 1 0 auto;
    flex-direction: column;
    grid-area: ap-content;
    max-width: 100vw;

    @at-root :not(.is-authentic) > & {
      grid-column: span 2;
      max-width: 100vw;
      width: 100vw;
    }
  }

  &-frame {
    background-color: $white;
    background-image: url('/assets/images/bg-pattern.png');
    background-position: 0 0;
    background-repeat: repeat;
    border-radius: 5px;
    box-shadow:
      0 0 0 1px rgba(#000, .1),
      5px 0 10px rgba(#000, .8);
    color: $grey-darkest;
    display: flex;
    flex-direction: column;
    padding-top: $header-height;

    .c-unsupported ~ & {
      height: 0;
      max-height: 0;
      max-width: 0;
      min-height: 0;
      overflow: hidden;
      visibility: hidden;
      width: 0;
    }
  }

  &-main {
    display: flex;
    flex: 1;
    max-height: 100%;
    min-height: 0;
    position: relative;
  }
}

@media (max-width: $mobile-flip-inv) {
  .ap-frame.is-web { padding-top: 0; }
}

@supports (display: grid) {
  @include media-query('min-width', $mobile-flip) {
    display: grid;
    grid-template:
      'ap-head ap-head ap-head' 53px
      'ap-nav ap-content ap-side' calc(100vh - 73px)
      / 8.8rem 1fr auto;
    height: calc(100vh - 20px);
    left: 10px;
    overflow: hidden;
    padding-top: 0;
    position: absolute;
    top: 10px;
    width: calc(100vw - 20px);

    .ap-content {
      max-width: calc(100vw - 8.8rem);
      min-height: 0;
      min-width: 0;
    }

    &:not(.is-authentic) .ap-content { max-width: 100vw; }
  }
}
